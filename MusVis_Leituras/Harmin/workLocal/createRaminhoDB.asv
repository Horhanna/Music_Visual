function createRaminhoDB(dirPath, wavFileName, seqFileName, introLength)
if (nargin < 4)
    introLength = 0;
end
cd(dirPath);
baseName = strtok(wavFileName, '.');
dbSeqName = [baseName 'Sequence.db'];
dbSegsNChordsName = [baseName 'SegsNChords.db'];
dbChromaName = [baseName 'Chroma.db'];
%create sequence file, and get the list of chords
seq = readTranscripted(seqFileName, dbSeqName);
seqLength = length(seq);
%create the chroma file and check if wave has the wright length
numSegs = createChromaFile(dirPath, wavFileName, seqLength, introLength);
%create the segs and chords file
SnC = fopen(dbSegsNChordsName, 'w');
for i = 1:numSegs
    fprintf(SnC, '%s\t %0.3d\t %d\n\r', wavFileName, i, seq(i));
end
fclose(SnC);
%create C++ code
cppName = [baseName '.cpp'];
fopen(cppName, 'w');
fprintf(cppName, 'retrieval_compDir = "%s";\n\r', dirPath);
fprintf(cppName, 'retrieval_FeaturesFileName = "%s";', dbChromaName);
   retrieval_FeaturesFileName = "24Chroma.db";
   retrieval_SegsNChordsFileName = "24SegsNChords.db";
   learning_MarkovDBFileName = "24Sequence.db";
